{"version":3,"sources":["Component/Contact.js","Component/About.js","Component/ContentLayout.js","Component/Footer.js","Component/Header.js","App.js","serviceWorker.js","Component/fontAwesome.js","index.js"],"names":["Contact","Component","render","React","createElement","className","target","href","About","src","alt","ContentLayout","Footer","id","Header","App","Boolean","window","location","hostname","match","library","add","faGoogle","faTwitter","faGithub","faInstagram","faBullseye","faDotCircle","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8VAGA,MAAMA,UAAgBC,YAClBC,SACI,OACIC,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,MAAIC,UAAU,WACVF,IAAAC,cAAA,UAAID,IAAAC,cAAA,KAAGC,UAAU,uBAAuBC,OAAO,SAASC,KAAK,+CAC7DJ,IAAAC,cAAA,UAAID,IAAAC,cAAA,KAAGC,UAAU,qBAAqBE,KAAK,mCAMhDP,Q,MCbf,MAAMQ,UAAcP,YAChBC,SACI,OACIC,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,QAAMC,UAAU,UACZF,IAAAC,cAAA,OAAKC,UAAU,SAASI,IAAI,0BAA0BC,IAAI,gBAE9DP,IAAAC,cAAA,MAAIC,UAAU,QACVF,IAAAC,cAAA,UAAID,IAAAC,cAAA,UAAI,iBACRD,IAAAC,cAAA,UAAI,0BAGRD,IAAAC,cAAA,YAAM,+YASPI,QCpBf,MAAMG,UAAsBV,YACxBC,SACI,OACAC,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAACI,EAAK,MACNL,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAACJ,EAAO,MACRG,IAAAC,cAAA,WACID,IAAAC,cAAA,KAAGC,UAAU,mCAAmCE,KAAK,aAAaD,OAAO,UAAS,UACtFH,IAAAC,cAAA,aAMGO,Q,MCrBf,MAAMC,UAAeX,YACjBC,SACI,OACAC,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,MAAIS,GAAG,aAAY,uBAKhBD,QCAf,MAAME,UAAeb,YACjBC,SACI,OACAC,IAAAC,cAAA,OAAKC,UAAU,gBAKRS,Q,MCIAC,MAhBf,WAEE,OAEEZ,IAAAC,cAAA,OAAKC,UAAU,eAEXF,IAAAC,cAACU,EAAM,CAACT,UAAU,eAGlBF,IAAAC,cAACO,EAAa,MAEdR,IAAAC,cAACQ,EAAM,CAACP,UAAU,iBCNNW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sCCTNC,IAAQC,IACJC,IACAC,IACAC,IACAC,IACAC,IACAC,KCJJC,IAAS3B,OAAOC,IAAAC,cAACW,EAAG,MAAKe,SAASC,eAAe,SFsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,iB","file":"static/js/main.a5378192.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../styles/css/contact.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-contact\">\r\n                <h2>CONTACT</h2>\r\n                <ul className=\"actions\">\r\n                    <li><a className=\"fa fa-linkedin fa-2x\" target=\"_blank\" href=\"https://www.linkedin.com/in/jerrytnguyen/\" /></li>\r\n                    <li><a className=\"fa fa-google fa-2x\" href=\"mailto:nguye1544@gmail.com\" /></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport '../styles/css/about.css'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-about\">\r\n                <span className=\"avatar\">\r\n                    <img className=\"avatar\" src=\"../resources/avatar.JPG\" alt=\"avatar.jpg\"/>\r\n                </span>\r\n                <ul className=\"list\">\r\n                    <li><h2>Jerry Nguyen</h2></li>\r\n                    <li>Sr. Software Engineer</li>\r\n                </ul>\r\n\r\n                <span>\r\n                    Seasoned software engineer with over 7 years of experience and a versatile background in front-end, back-end, and full-stack development, as well as data engineering.\r\n                    Adept at modernizing applications, crafting secure features, and mentoring junior engineers.\r\n                    My broad skill set enables me to tackle complex projects and deliver robust solutions across the full software development lifecycle.\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport Contact from \"./Contact\";\r\nimport About from \"./About\";\r\n\r\nclass ContentLayout extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"app-contentLayout\">\r\n            <About />\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n            <Contact />\r\n            <hr />\r\n                <a className=\"btn btn-outline-light btn-resume\" href=\"Resume.pdf\" target=\"_blank\">resume</a>\r\n            <hr />\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default ContentLayout;\r\n","import React, { Component } from 'react';\r\nimport '../styles/css/footer.css';\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"app-footer\">\r\n            <ul id=\"copyright\">Â© Jerry Nguyen</ul>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport '../styles/css/header.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ContentLayout from './ContentLayout';\r\nimport Footer from './Footer';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"app-header\">\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport './styles/css/app.css';\r\nimport Header from './Component/Header'\r\nimport ContentLayout from './Component/ContentLayout'\r\nimport Footer from './Component/Footer'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction App() {\r\n    var route = \"\";\r\n  return (\r\n\r\n    <div className=\"app-wrapper\">\r\n        {/* Begin Header*/}\r\n        <Header className=\"app-header\" />\r\n\r\n        {/* Begin ContentLayout*/}\r\n        <ContentLayout />\r\n        {/* Begin Footer*/}\r\n        <Footer className=\"app-footer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport { faBullseye } from '@fortawesome/free-solid-svg-icons';\r\nimport { faDotCircle } from '@fortawesome/free-regular-svg-icons';\r\n// import your icons\r\nimport { faGoogle, faTwitter, faGithub, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nlibrary.add(\r\n    faGoogle,\r\n    faTwitter,\r\n    faGithub,\r\n    faInstagram,\r\n    faBullseye,\r\n    faDotCircle\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport './styles/css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Experience from './Component/Experience';\r\nimport Contact from './Component/Contact';\r\n// import our fontawesome library\r\nimport './Component/fontAwesome'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}